services:
  chromadb:
    extends:
      file: ./vectordb/docker-compose.yml
      service: chromadb
    environment:
      - CHROMA_HOST_PORT=3003
      - IS_PERSISTENT=TRUE
      - PERSIST_DIRECTORY=/app/data
    volumes:
      - ./data/chromadb:/app/data
    networks:
      - chatbot-network
    
  postgres:
    extends:
      file: ./postgres/docker-compose.yml
      service: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    networks:
      - chatbot-network


  init:
    extends:
      file: ./vectordb/docker-compose.yml
      service: init
    environment:
      - CHROMADB_HOST=chromadb
      - CHROMADB_PORT=3003
      - LOGGING_LEVEL=INFO
      - CONFIG_PATH=configs/config.json
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - DATA_PATH=data/json
    networks:
      - chatbot-network

  backend:
    extends:
      file: ./backend/docker-compose.yml
      service: backend
    environment:
      - BOT_INIT_MESSAGE=Bonjour, je suis le chatbot de l'Universit√© de Lausanne. Comment puis-je vous aider ?
      - CHROMADB_PORT=3003
      - CHROMADB_HOST=chromadb
      - USE_STREAM=True
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - PUBLIC_IP=${PUBLIC_IP}
      - DOMAIN_NAME=${DOMAIN_NAME}
      - LANGCHAIN_TRACING_V2=${LANGCHAIN_TRACING_V2}
      - LANGCHAIN_API_KEY=${LANGCHAIN_API_KEY}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
    volumes:
      - ./data/graph:/app/graph
    networks:
      - chatbot-network

  frontend:
    extends:
      file: ./frontend/docker-compose.yml
      service: frontend
    env_file:
      - ./frontend/.env
    volumes:
      - webdata:/usr/share/nginx/html
      - letsencrypt:/etc/letsencrypt
    networks:
      - chatbot-network
    depends_on:
      certbot:
        condition: service_completed_successfully

  certbot:
    image: certbot/certbot
    volumes:
      - webdata:/usr/share/nginx/html
      - letsencrypt:/etc/letsencrypt
    command: certonly --webroot --webroot-path=/usr/share/nginx/html --email denis.gremaud@gmail.com --no-eff-email --staging --agree-tos -d chatbot.unisis.ch -d www.chatbot.unisis.ch

volumes:
  webdata:
  letsencrypt:
    
networks:
  chatbot-network:
    driver: bridge